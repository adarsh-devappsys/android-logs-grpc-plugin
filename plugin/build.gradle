plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.protobuf)
    id 'maven-publish'
}

android {
    namespace 'com.devappsys.logs_grpc'
    compileSdk 36

    defaultConfig {
        minSdk 26
        targetSdk 36
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }



    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    sourceSets {
        main {
            java.srcDirs = ['src/main/java']    // üëà tell Gradle about Java source
            proto.srcDir 'src/main/proto'        // üëà your proto files
        }
        debug {
            java.srcDirs = ['src/main/java']
            proto.srcDir 'src/main/proto'
        }
        release {
//            java.srcDirs = ['src/main/java']
//            proto.srcDir 'src/main/proto'
        }
    }

    publishing{
        singleVariant("release") {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

dependencies {

    implementation libs.annotation.jvm
    implementation libs.work.runtime
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit

    // ‚úÖ gRPC + Protobuf
    implementation libs.grpc.okhttp
    implementation libs.grpc.protobuf
    implementation libs.grpc.stub
    implementation libs.protobuf.java
    compileOnly libs.javax.annotation.api
}


protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.25.3"
    }

    plugins {
        register("grpc") {
            artifact = "io.grpc:protoc-gen-grpc-java:1.69.0"
        }
    }

    generateProtoTasks {
    all().configureEach { task ->
        task.builtins {
           register("java"){
               outputSubDir = "generated"
           }
        }
        task.plugins {
            register("grpc"){
                outputSubDir = "generated"
            }
        }
    }
}
}

def localProperties = new Properties()
def localPropertiesFile = new File(rootDir, 'local.properties')
if (localPropertiesFile.exists()) {
    localProperties.load(localPropertiesFile.newDataInputStream())
}

def gprUser = localProperties.getProperty('gpr.user') ?: ''
def gprToken = localProperties.getProperty('gpr.token') ?: ''

publishing {
    publications {
        register("release", MavenPublication) {
            afterEvaluate {
                from(components.findByName("release"))

                groupId = 'com.devappsys'
                artifactId = 'logs-grpc-plugin'
                version = '0.0.40'
            }
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/adarsh-devappsys/android-logs-grpc-plugin")
            credentials {
                username =gprUser
                password = gprToken
            }
        }
    }
}

tasks.register("printComponents") {
    doLast {
        println("Available components:")
        components.forEach { component ->
            println("- ${component.name}")
        }
        if (components.isEmpty()) {
            println("‚ö†Ô∏è No components found! Make sure singleVariant is configured inside android { publishing { } }.")
        }
    }
}


tasks.withType(JavaCompile).configureEach {
    println("‚úÖ Compiling Java sources for ${name} : ${source.files}")
}
